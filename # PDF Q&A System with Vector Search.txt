# PDF Q&A System with Vector Search

A Python application that enables interactive question-answering on PDF documents using vector embeddings and LLM integration.

## Features

- **PDF Processing**: Extracts text from PDF files using PyPDF2
- **Vector Storage**: Uses Cassandra/AstraDB for storing document embeddings
- **Embeddings**: Utilizes HuggingFace's all-MiniLM-L6-v2 model for text embeddings
- **LLM Integration**: Powered by Groq's Llama-3.1-8b-instant model
- **Interactive Chat**: Command-line interface for asking questions about the document

## Requirements

```bash
pip install langchain langchain-groq datasets python-dotenv cassio PyPDF2 langchain-huggingface
```

## Environment Variables

Create a `.env` file with:
```
ASTRA_DB_APPLICATION_TOKEN=your_astra_token
ASTRA_DB_ID=your_astra_db_id
GROQ_API_KEY=your_groq_api_key
HF_TOKEN=your_huggingface_token
```

## Usage

1. Place your PDF file named "The_Stranger.pdf" in the project directory
2. Run the script: `python your_script.py`
3. Ask questions about the document
4. Type "quit" to exit

## How It Works

1. **Document Processing**: PDF text is extracted and split into 800-character chunks with 200-character overlap
2. **Vector Storage**: Text chunks are embedded and stored in Cassandra vector database
3. **Query Processing**: User questions are embedded and matched against stored vectors
4. **Answer Generation**: Relevant chunks are retrieved and processed by the LLM to generate answers
5. **Relevance Display**: Shows top 4 most relevant document chunks with similarity scores

## Example Output

```
Enter Your Question: What is the main theme?
Question: "What is the main theme?"
Answer: "The main theme explores existentialism and absurdity..."

First Document By Relevance:::
   [0.8234] "The sun was beating down on me and I felt..."
```